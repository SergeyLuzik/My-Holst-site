/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nconst mainWidth = document.querySelector(\".page-main\").offsetWidth;\r\n\r\n// HERO  SLIDER\r\nif (mainWidth > 800) {\r\n  (() => {\r\n    const slidesWrapper = document.querySelector(\".slider__slides-list\"),\r\n      activSlideWidth = parseInt(\r\n        getComputedStyle(\r\n          document.querySelector(\".hero__slider\")\r\n        ).gridTemplateColumns.split(\" \")[0],\r\n        10\r\n      ),\r\n      gapValue = parseInt(getComputedStyle(slidesWrapper).gap),\r\n      slides = slidesWrapper.children,\r\n      slideWidth = slides[0].offsetWidth,\r\n      initialOffset = slideWidth * 2 + gapValue - activSlideWidth,\r\n      offset = slideWidth + gapValue,\r\n      transitionTime = \"0.3s\",\r\n      slideScale =\r\n        \"translate(-12.5%, calc(12.5% - 16px)) scale(1.25)\" /*\"translate(-10%, 6.5%) scale(1.2)\"*/,\r\n      left = document.querySelector(\".slider-button_left\"),\r\n      right = document.querySelector(\".slider-button_right\");\r\n\r\n    let inAction = false;\r\n\r\n    // Initialize slider start position\r\n\r\n    console.log(\"activSlideWidth \" + activSlideWidth);\r\n    console.log(\"slideWidth \" + slideWidth);\r\n    console.log(\"initialOffset \" + initialOffset);\r\n    console.log(\"offset \" + offset);\r\n\r\n    slidesWrapper.style.transform = `translateX(${-initialOffset}px)`;\r\n    slides[0].style.opacity = 0;\r\n    //slides[0].style.transform = \"translate(0) scale(0.3)\";\r\n    slides[1].style.transform = slideScale;\r\n    //slides[0].style.transitionTimingFunction = \"ease-in\";\r\n\r\n    function movLeft(slidesWrapper, offset) {\r\n      slidesWrapper.ontransitionend = (_) => {\r\n        slidesWrapper.ontransitionend = null;\r\n        slidesWrapper.style.transition = \"none\";\r\n        slides[0].removeAttribute(\"style\");\r\n\r\n        slidesWrapper.append(slides[0]);\r\n        slidesWrapper.style.transform = `translateX(${-initialOffset}px)`;\r\n\r\n        inAction = false;\r\n      };\r\n      slidesWrapper.style.transition = transitionTime; //todo задавать transition через запятую всем сразу?\r\n      slidesWrapper.style.transform = `translateX(${\r\n        -offset - initialOffset\r\n      }px)`;\r\n\r\n      slides[1].style.transition = transitionTime;\r\n      slides[1].style.opacity = 0;\r\n      slides[1].style.transform = \"translate(0)\"; // scale(0.3)\r\n\r\n      slides[2].style.transition = transitionTime;\r\n      slides[2].style.transform = slideScale;\r\n      slides[2].style.transitionTimingFunction = \"cubic-bezier(.72,.07,.95,.7)\"; //.75,0,1,.02 ease-in\r\n    }\r\n    function movRight(slidesWrapper, offset) {\r\n      slidesWrapper.ontransitionend = (_) => {\r\n        slidesWrapper.ontransitionend = null;\r\n        slidesWrapper.style.transition = \"none\";\r\n        slides[1].removeAttribute(\"style\");\r\n\r\n        slidesWrapper.lastElementChild.style.opacity = 0;\r\n        slidesWrapper.prepend(slidesWrapper.lastElementChild);\r\n        slidesWrapper.style.transform = `translateX(${-initialOffset}px)`;\r\n\r\n        inAction = false;\r\n      };\r\n      slidesWrapper.style.transition = transitionTime;\r\n      slidesWrapper.style.transform = `translateX(${offset - initialOffset}px)`;\r\n\r\n      slides[0].style.transition = transitionTime;\r\n      slides[0].style.opacity = 1;\r\n      slides[0].style.transform = slideScale;\r\n      slides[0].style.transitionTimingFunction = \"ease-in\";\r\n\r\n      slides[1].style.transition = transitionTime;\r\n      slides[1].style.transform = \"translate(0) scale(1)\";\r\n      slides[1].style.transitionTimingFunction = \"cubic-bezier(0,.75,.02,1)\"; //0,.75,.02,1  // 0,0,.02,1 // .75,0,1,.02\r\n    }\r\n\r\n    left.onclick = (_) => {\r\n      if (inAction) return;\r\n      inAction = true;\r\n      movRight(slidesWrapper, offset);\r\n    };\r\n    right.onclick = (_) => {\r\n      if (inAction) return;\r\n      inAction = true;\r\n      movLeft(slidesWrapper, offset);\r\n    };\r\n  })();\r\n\r\n  // FEEDBACK SLIDER\r\n\r\n  //todo расширить обертку на размер gap между слайдами чтобы можно было внутрь положить размытие и слайды менялись без резкой полосы\r\n}\r\n\r\nif (mainWidth > 1200) {\r\n  (() => {\r\n    const slidesWrapper = document.querySelector(\".feedback__list\"),\r\n      slides = slidesWrapper.children,\r\n      slideWidth = slides[0].offsetWidth,\r\n      slideWindowWidth = slidesWrapper.offsetWidth,\r\n      gapValue =\r\n        (slideWindowWidth / 100) *\r\n        parseFloat(getComputedStyle(slidesWrapper).gap),\r\n      amountSlidesOnList = Math.floor(\r\n        slideWindowWidth / (slideWidth + gapValue)\r\n      ),\r\n      slideListsAmount = Math.ceil(slides.length / amountSlidesOnList),\r\n      offset = slideWindowWidth - 2 * gapValue, //slideWindowWidth + gapValue,\r\n      transitionTime = \"1s\",\r\n      left = document.querySelector(\".feedback >.slider-button_left\"),\r\n      right = document.querySelector(\".feedback > .slider-button_right\");\r\n\r\n    let inAction = false;\r\n\r\n    console.log(\"gapValue \" + gapValue);\r\n    console.log(\"slideWindowWidth \" + slideWindowWidth);\r\n    console.log(slides);\r\n    console.log(\"slides.length \" + slides.length);\r\n    console.log(\"slideListsAmount \" + slideListsAmount);\r\n    console.log(\"amountSlidesOnList \" + amountSlidesOnList);\r\n\r\n    // Initialize slider start position -100%\r\n    //slidesWrapper.style.transform = `translateX(-${offset}px)`;\r\n    //todo учитывать gap!\r\n    //todo как высчитать сколько листов? (ширину окна делить на ширину карточки без остатка и потом высчитывать сколько карточек на сколько листов?)\r\n    //todo крутить slideListsAmount как index с перескоком при достижении края index = ++index % slides.length;\r\n\r\n    // Initialize slider start position\r\n    slidesWrapper.style.transform = `translateX(${-offset}px)`;\r\n\r\n    function movLeft(slidesWrapper, offset) {\r\n      slidesWrapper.ontransitionend = (_) => {\r\n        slidesWrapper.ontransitionend = null;\r\n        slidesWrapper.style.transition = \"none\";\r\n\r\n        for (let i = 0; i < amountSlidesOnList; i++) {\r\n          slidesWrapper.append(slides[0]);\r\n        }\r\n        slidesWrapper.style.transform = `translateX(${-offset}px)`;\r\n\r\n        inAction = false;\r\n      };\r\n      slidesWrapper.style.transition = transitionTime;\r\n      slidesWrapper.style.transform = `translateX(${-offset * 2 - gapValue}px)`;\r\n    }\r\n    function movRight(slidesWrapper, offset) {\r\n      slidesWrapper.ontransitionend = (_) => {\r\n        slidesWrapper.ontransitionend = null;\r\n        slidesWrapper.style.transition = \"none\";\r\n\r\n        for (let i = 0; i < amountSlidesOnList; i++) {\r\n          slidesWrapper.prepend(slidesWrapper.lastElementChild);\r\n        }\r\n        slidesWrapper.style.transform = `translateX(${-offset}px)`;\r\n\r\n        inAction = false;\r\n      };\r\n\r\n      slidesWrapper.style.transition = transitionTime;\r\n      slidesWrapper.style.transform = `translateX(${gapValue}px)`;\r\n    }\r\n\r\n    right.onclick = (_) => {\r\n      console.log(\"right\");\r\n      if (inAction) return;\r\n      inAction = true;\r\n      movLeft(slidesWrapper, offset);\r\n    };\r\n    left.onclick = (_) => {\r\n      console.log(\"left\");\r\n      if (inAction) return;\r\n\r\n      inAction = true;\r\n      movRight(slidesWrapper, offset);\r\n    };\r\n  })();\r\n}\r\n\r\nif (mainWidth <= 1250) {\r\n  const burgerButton = document.querySelector(\".page-header__burger-button\"),\r\n    headerHeigth = document.querySelector(\".page-header\").offsetHeight;\r\n\r\n  console.log(\"headerHeigth \" + headerHeigth);\r\n\r\n  burgerButton.onclick = () => {\r\n    burgerButton.classList.toggle(\"page-header__burger-button_open\");\r\n\r\n    if (mainWidth <= 680) {\r\n      const headerMenu = document.querySelector(\".page-header__menu\");\r\n      headerMenu.style.top = `${headerHeigth}px`;\r\n      headerMenu.classList.toggle(\"page-header__menu_open\");\r\n\r\n      headerMenu.querySelectorAll(\"a\").forEach((link) => {\r\n        link.onclick = () => {\r\n          headerMenu.classList.remove(\"page-header__menu_open\");\r\n          burgerButton.classList.remove(\"page-header__burger-button_open\");\r\n        };\r\n      });\r\n      // todo убирать обработчики при закрытии меню?\r\n    } else {\r\n      const headerNav = document.querySelector(\".page-header__nav\");\r\n      headerNav.style.top = `${headerHeigth}px`;\r\n      headerNav.classList.toggle(\"page-header__nav_open\");\r\n\r\n      headerNav.querySelectorAll(\"a\").forEach((link) => {\r\n        link.onclick = () => {\r\n          headerNav.classList.remove(\"page-header__nav_open\");\r\n          burgerButton.classList.remove(\"page-header__burger-button_open\");\r\n        };\r\n      });\r\n    }\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://my-holst-site/./index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./index.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;